server:
  port: 9527

spring:
  application:
    name: cloud-getaway

  #配置方式配网关
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        #即此路由地址下的/payment/get/**请求需要经过9527网关
        - id: payment_routh  #路由的ID，没有固定要求但要求唯一
          #uri: http://localhost:8001 #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #通过服务名路由实现负载均衡
          predicates:
            - Path=/payment/get/**  #断言，路径相匹配的进行路由

        - id: payment_routh2  #路由的ID，没有固定要求
          #uri: http://localhost:8001 #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/lb/** #断言，路径相匹配的进行路由
          #增加断言规则，在这个时间以后才匹配
            - After=2020-03-11T00:40:08.642+08:00[Asia/Shanghai]
            #- Method=Put
            #- Before=.....
            #- Between=.....,......
          #cookei name和正则或  name和对应值lhl
            #- Cookie=token,lhl
          # 携带参数X-Request-Id或者满足\d+（值为整数）的请求头才会匹配
            #- Header=X-Request-Id, \d+
            #- Host=qiying.com:8080
            #- Path=/app/{path}
          # 要有参数名username且值为整数
            #- Query=username,\d+
          #过滤器，一般自己写
          filters:
            #- PrefixPath=/app
          # 访问localhost:8080/test, 请求会转发到localhost:8001/app/test
            #- RewritePath=/test, /app/test
            #- RewritePath=(?<oldPath>^/), /app$\{oldPath}
            #- SetPath=/app/{path}



          #可通过9527访问  http://localhost:9527/payment/1
eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    register-with-eureka: true
    #是否检索服务,从eureka抓取已有的注册信息，集群必须为true才能配合ribbon
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/
      #defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
